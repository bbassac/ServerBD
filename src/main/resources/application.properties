
server.port=8080

#Admin console
spring.boot.admin.url=http://localhost:8080/status
spring.boot.admin.username = bruno
spring.boot.admin.password = bruno
#scurity
security.user.name=bruno
security.user.password=bruno
management.security.role=SUPERUSER
spring.boot.admin.context-path = /status
#Http compression
server.compression.enabled=true

#API DOC
# mandatory configuration
jsondoc.version=1.0
jsondoc.basePath=http://localhost:8080
jsondoc.packages[0]=hello
jsondoc.packages[1]=hello.controller
jsondoc.packages[2]=hello.repository
jsondoc.packages[3]=hello.bean
# optional configuration
jsondoc.playgroundEnabled=true
jsondoc.displayMethodAs=URI
server.compression.mime-types=
# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/collectionbd?useSSL=false
spring.datasource.username = CollectionBD
spring.datasource.password = CollectionBD

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect